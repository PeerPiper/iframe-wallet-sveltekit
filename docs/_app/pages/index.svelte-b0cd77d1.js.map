{"version":3,"file":"index.svelte-b0cd77d1.js","sources":["../../../../../src/lib/stores.js","../../../../../src/lib/Connector.svelte","../../../../../src/lib/utils.ts","../../../../../src/lib/Clipboard.svelte","../../../../../src/lib/ListKeys.svelte","../../../../../src/lib/GetKeys.svelte","../../../../../src/lib/AutoSizer.svelte","../../../../../src/lib/Opened.svelte","../../../../../src/lib/components/confirm/DefaultConfirmation.svelte","../../../../../src/lib/components/confirm/Connect.svelte","../../../../../src/lib/components/confirm/Sign.svelte","../../../../../src/lib/components/confirm/Decrypt.svelte","../../../../../src/lib/components/confirm/index.ts","../../../../../src/lib/Confirmer.svelte","../../../../../src/routes/index.svelte"],"sourcesContent":["import { derived, writable } from 'svelte/store';\r\n\r\nexport const keypairs = writable(new Map());\r\n\r\nexport const storedValue = writable();\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport { CONSTANTS } from '@peerpiper/iframe-wallet-engine';\r\n\timport { storedValue } from '$lib/stores';\r\n\r\n\texport let mounted;\r\n\r\n\t// function names assigned only after component loads in DOM\r\n\tlet openTwinWindow;\r\n\tlet handleMessage;\r\n\r\n\t// state variables\r\n\tlet connecting;\r\n\tlet openedWindow;\r\n\r\n\tlet topUrl;\r\n\r\n\tonMount(async () => {\r\n\t\ttopUrl = self === top ? document.URL : document.referrer;\r\n\r\n\t\t// If 1) is NOT top AND 2) No keys are stored a new twin window must be opened so that the user can generate keys, in the top window\r\n\t\topenTwinWindow = () => {\r\n\t\t\tconnecting = true;\r\n\t\t\topenedWindow = window.open(window.location.href, '_blank'); // open the same domain to provide maximum security.\r\n\t\t};\r\n\r\n\t\thandleMessage = async (event) => {\r\n\t\t\tif (event.data == CONSTANTS.OPENED_SIGNAL) {\r\n\t\t\t\tevent.ports[0].postMessage(topUrl);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (event.data.key == CONSTANTS.WINDOW_SYNC) {\r\n\t\t\t\tconsole.log('Sync received ');\r\n\t\t\t\t$storedValue = event.data.storedValue;\r\n\r\n\t\t\t\t// save mnemonic to localstorage\r\n\t\t\t\t// run: mnemonic to proxcryptor\r\n\t\t\t\t// send confirmation back to opened window (so it can close)\r\n\r\n\t\t\t\t// await importKeys(JSON.parse(event.data.data)); // import the keys here in this browser context\r\n\t\t\t\tevent.ports[0].postMessage('Imported'); // send ack back to Opened window so it can remove \"pending\" label for this window\r\n\t\t\t\tconnecting = false;\r\n\t\t\t\topenedWindow.close();\r\n\t\t\t\twindow.focus(); // fails tho\r\n\t\t\t}\r\n\r\n\t\t\t// Main page closed, state is no longer trying to connect\r\n\t\t\tif (event.data == CONSTANTS.CLOSING) {\r\n\t\t\t\tconnecting = false;\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<svelte:window on:message={handleMessage} />\r\n\r\n<div class=\"connector\">\r\n\t{#if mounted}\r\n\t\t{#if $storedValue}\r\n\t\t\t<slot />\r\n\t\t{:else}\r\n\t\t\t<div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={connecting}\r\n\t\t\t\t\tclass={connecting ? 'yellow' : 'ready'}\r\n\t\t\t\t\ton:click|preventDefault={openTwinWindow}\r\n\t\t\t\t\t>{connecting ? 'Authorize from Main Wallet Window' : 'Connect'}</button\r\n\t\t\t\t>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.connector {\r\n\t\tdisplay: flex;\r\n\t\tmin-height: 100%;\r\n\t\t/* margin: 1em; */\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: nowrap;\r\n\t}\r\n</style>\r\n","export const shorten = (key: string, start = 6, end = 6) => {\r\n\tif (key.length < start + end + 3) return key;\r\n\treturn key.slice(0, start) + '...' + key.slice(key.length - end, key.length);\r\n};\r\n\r\nexport const shortenURL = (key: string) => {\r\n\tconst tail = 30;\r\n\tconst start = 'https://'.length; // key.slice(start, Math.min(start, 8)) +\r\n\tconst end = Math.max(key.length - tail, 0);\r\n\tconst maybeEllips = key.length > tail ? '..' : '';\r\n\treturn maybeEllips + key.slice(end, key.length);\r\n};\r\n","<script>\r\n\timport { fade } from 'svelte/transition';\r\n\r\n\texport let value = null;\r\n\r\n\tlet clip;\r\n\tlet copied;\r\n\tlet duration = 2000;\r\n\r\n\tasync function copy() {\r\n\t\tvar promise = navigator.clipboard.writeText(clip.innerHTML);\r\n\t\tawait promise;\r\n\t\tvalue = promise;\r\n\t\tcopied = true;\r\n\t\tsetTimeout(() => (copied = false), 1);\r\n\t}\r\n</script>\r\n\r\n<!-- Clipboard  -->\r\n<div class=\"Clipboard-Container\" on:click={copy}>\r\n\t<div class=\"Clipboard\" bind:this={clip}>\r\n\t\t<slot {copy} />\r\n\t</div>\r\n\t{#if copied}\r\n\t\t<div out:fade={{ duration }}>✔️Copied</div>\r\n\t{:else}\r\n\t\t<div in:fade={{ duration: 0, delay: duration }}>\r\n\t\t\t<svg\r\n\t\t\t\ton:click={copy}\r\n\t\t\t\tclass=\"octicon octicon-clippy\"\r\n\t\t\t\tviewBox=\"0 0 14 16\"\r\n\t\t\t\tversion=\"1.1\"\r\n\t\t\t\twidth=\"14\"\r\n\t\t\t\theight=\"16\"\r\n\t\t\t\taria-hidden=\"true\"\r\n\t\t\t>\r\n\t\t\t\t<title>Copy to clipboard</title>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule=\"evenodd\"\r\n\t\t\t\t\td=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\ttextarea {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 2em;\r\n\t\theight: 2em;\r\n\t\tpadding: 0;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\tbox-shadow: none;\r\n\t\tbackground: transparent;\r\n\t}\r\n\t.Clipboard {\r\n\t\tmargin: 0 0.5em;\r\n\t}\r\n\t.Clipboard-Container {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.Clipboard-Container,\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: transparent;\r\n\t\tstroke: var(--font-color);\r\n\t\tfill: transparent;\r\n\t\twidth: auto;\r\n\t\theight: 1.5em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// show the user's keys\r\n\t// parse out the JWKs into types: RSA and Ed25519 according to JWK\r\n\timport { shorten } from '$lib/utils';\r\n\timport Clipboard from './Clipboard.svelte';\r\n\r\n\texport let keys;\r\n\r\n\tlet selectedRSA;\r\n\tlet collapsed;\r\n</script>\r\n\r\n{#if keys && keys.length > 0}\r\n\t<div class=\"card\">\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.kty == 'RSA').length}\r\n\t\t\t<div class=\"keylist\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Arweave</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.kty == 'RSA') as rsaJWK}\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclass=\"{collapsed && selectedRSA != rsaJWK.kid\r\n\t\t\t\t\t\t\t\t\t? 'hide'\r\n\t\t\t\t\t\t\t\t\t: ''} list-group-item list-group-item-action \"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Clipboard />\r\n\t\t\t\t\t\t\t\t{shorten(rsaJWK.publicKeyJWK.kid)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519')}\r\n\t\t\t<div class=\"keylist\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Ed25519</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519') as edJWK}\r\n\t\t\t\t\t\t\t<li class=\" list-group-item list-group-item-action \">\r\n\t\t\t\t\t\t\t\t{shorten(edJWK.name)}\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\t<Clipboard>{edJWK.publicKeyJWK.x}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\t<Clipboard>{edJWK.publicKeyBase58}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\t<Clipboard>{edJWK.publicKey}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<!-- <b>{shorten(key?.publicKeyBase58)}</b><br /> -->\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\tdiv {\r\n\t\t--font-color: #0eff02;\r\n\t}\r\n\t.full-pubKey {\r\n\t\t/* display: none; */\r\n\t\ttext-overflow: ellipsis;\r\n\t}\r\n\t.card {\r\n\t\tmargin: 1em 0em;\r\n\t\tbackground-color: rgb(35, 35, 35);\r\n\t\tpadding: 1.5em;\r\n\t\t-webkit-border-radius: 4px;\r\n\t\t-moz-border-radius: 4px;\r\n\t\tborder-radius: 4px;\r\n\t\tbox-shadow: 2px 2px 6px rgba(14, 255, 2, 0.7);\r\n\t\tcolor: var(--font-color);\r\n\t\twidth: 100%;\r\n\t}\r\n\t.keylist {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: nowrap;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: stretch;\r\n\t\talign-content: stretch;\r\n\t\tborder-width: 2px;\r\n\t\tborder-bottom: 1px #d6e7df solid;\r\n\t\tpadding-bottom: 4px;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\t.left {\r\n\t\tflex-shrink: 2;\r\n\t\twidth: 85px;\r\n\t}\r\n\t.row,\r\n\tul {\r\n\t\tmargin: 0em;\r\n\t\tpadding: 0em;\r\n\t}\r\n\t.row:not(.left) {\r\n\t\tflex: 1 1 auto;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n\tli {\r\n\t\tlist-style: none;\r\n\t\tfont-family: var(--font-mono);\r\n\t}\r\n</style>\r\n","<script>\r\n\t/**\r\n\tKeys can come from:\r\n\t- Loaded from storage (index.svelte, in which case this component is not needed)\r\n\t- Generated from scratch (here)\r\n\t- Load by user (here)\r\n\r\n\tkeys get saved to $storedValue which trigger the ImmortalDB saved\r\n\t*/\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\timport { keypairs } from '$lib/stores';\r\n\timport { storedValue } from '$lib/stores';\r\n\r\n\timport { internals } from '@peerpiper/iframe-wallet-engine';\r\n\timport ListKeys from './ListKeys.svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet handleGenerateKeypair;\r\n\r\n\t// state variables\r\n\tlet creating = '';\r\n\tlet keys;\r\n\r\n\tonMount(async () => {\r\n\t\thandleGenerateKeypair = async () => {\r\n\t\t\tcreating = 'Creating keypairs...';\r\n\r\n\t\t\tconst mnemonic = await internals.generateMnemonic();\r\n\r\n\t\t\t// save to storedValue.\r\n\t\t\t// TODO: offer password protection/encryption?\r\n\t\t\t$storedValue = { ...$storedValue, mnemonic };\r\n\r\n\t\t\tcreating += '<br/>Created mnemonic.';\r\n\t\t\tcreating += `<br/>${mnemonic}`;\r\n\t\t\tcreating += '<br/>Creating master keypair (type ed25519)...';\r\n\t\t};\r\n\t});\r\n\r\n\t$: if ($storedValue && $storedValue.mnemonic) loadKeys(); // load keys once there is a storedValue\r\n\r\n\tasync function loadKeys() {\r\n\t\t// console.log('LOADING KEYS into Proxcryptor...');\r\n\t\tawait internals.loadMnemonicInProxcryptor($storedValue.mnemonic); // let proxcryptorName =\r\n\t\t// console.log('LOADED KEYS into Proxcryptor...');\r\n\t\tdispatch('loadedKeys', 'details'); // let parent component know\r\n\t\tkeys = getLoadedKeys(); // get all proxcryptor public key info\r\n\t}\r\n\r\n\tfunction getLoadedKeys() {\r\n\t\treturn internals.getLoadedKeys();\r\n\t}\r\n</script>\r\n\r\n{#if $storedValue !== undefined && $storedValue === null}\r\n\t<!-- Show \"Create Keys\" if no keys exist, no matter what page is showing -- toolbar? -->\r\n\t<div class=\"submit attention\">\r\n\t\tNo keypairs detected in this browser. Create or Import them:\r\n\t\t<button class={'green'} on:click={handleGenerateKeypair}>Create New Keypairs</button>\r\n\t\t{@html creating}\r\n\t</div>\r\n{:else}\r\n\t<!-- GetKeys: has storedValue, sending to Connector if in Opened window. Else, allowing user to manage keys.<br /> -->\r\n\t<ListKeys {keys} />\r\n\t<slot />\r\n{/if}\r\n\r\n<style>\r\n\tdiv {\r\n\t\tpadding: 2em;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\tlet offsetHeight;\r\n\tlet offsetWidth;\r\n\r\n\tlet width;\r\n\r\n\tlet resolveConnector;\r\n\tlet Connection;\r\n\tlet connector;\r\n\t// = new Promise((resolve, reject) => {\r\n\t// \tresolveConnector = resolve;\r\n\t// });\r\n\r\n\tlet walletReady;\r\n\tlet optionalHandlers = {\r\n\t\tsetWidth: (w) => (width = w)\r\n\t};\r\n\r\n\tonMount(async () => {\r\n\t\t({ Connection } = await import('@peerpiper/iframe-wallet-engine'));\r\n\t\tconst connection = new Connection();\r\n\t\tconnector = await connection.init(optionalHandlers);\r\n\r\n\t\twalletReady = async () => {\r\n\t\t\tconnector.walletReady(); // signal to the connector the wallet has loaded\r\n\t\t};\r\n\t});\r\n\r\n\t$: connector && offsetHeight && setHeight(offsetHeight);\r\n\t$: connector && offsetWidth && setWidth(offsetWidth);\r\n\r\n\tfunction show() {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.show(); // works\r\n\t}\r\n\r\n\tfunction hide() {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.hide(); // works\r\n\t}\r\n\r\n\tfunction setHeight(height) {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.setIframeParentHeight(height); // works\r\n\t}\r\n\r\n\tfunction setWidth(width) {\r\n\t\t// console.log(`Setting width ${width}`);\r\n\t\tconnector.setIframeParentWidth(width); // works\r\n\t}\r\n</script>\r\n\r\n<div class=\"autosizer\" bind:offsetHeight bind:offsetWidth style=\"max-width: {width}px;\">\r\n\t{#if walletReady}\r\n\t\t<slot {walletReady} {show} {hide} />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.autosizer {\r\n\t\tmargin: 0em;\r\n\t\t/* min-height: 100%;\r\n        height: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: nowrap; */\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport { CONSTANTS, internals } from '@peerpiper/iframe-wallet-engine';\r\n\timport { storedValue } from '$lib/stores';\r\n\r\n\timport GetKeys from '$lib/GetKeys.svelte';\r\n\timport Manager from '$lib/Manager.svelte';\r\n\r\n\tlet keyDetails;\r\n\tlet mounted;\r\n\r\n\tlet syncKeys;\r\n\tlet pending = true;\r\n\r\n\tonMount(() => {\r\n\t\ttry {\r\n\t\t\tif (window.location.origin === window.opener?.origin) {\r\n\t\t\t\tsendOpenerMsg(CONSTANTS.OPENED_SIGNAL, (event) => {\r\n\t\t\t\t\t// called when the opener replies to our message above\r\n\t\t\t\t\tconsole.log('iframe confirmed loaded by opener');\r\n\t\t\t\t\tpending = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"Origins didn't match\");\r\n\t\t}\r\n\r\n\t\tfunction sendOpenerMsg(msg, callback = (_) => {}) {\r\n\t\t\tconst channel = new MessageChannel();\r\n\t\t\tchannel.port1.onmessage = callback; // Listen for messages on port1\r\n\t\t\ttry {\r\n\t\t\t\tif (window.opener?.origin === window.location.origin)\r\n\t\t\t\t\twindow.opener.postMessage(msg, window.location.origin, [channel.port2]); // the opener will receive this message\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Origins didn't match\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Called when user allows a copy of the keys to be imported to another browser window in same origin\r\n\t\tsyncKeys = () => {\r\n\t\t\tsendOpenerMsg({ key: CONSTANTS.WINDOW_SYNC, storedValue: $storedValue }, (event) => {\r\n\t\t\t\tconsole.log('onComplete', event.data);\r\n\t\t\t\tpending = null;\r\n\t\t\t\tnavigateBack();\r\n\t\t\t}); // uses same origin, keys are secure\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('beforeunload', () => {\r\n\t\t\ttry {\r\n\t\t\t\tconsole.log(window.opener?.origin);\r\n\t\t\t\tconsole.log(window.location.origin);\r\n\t\t\t\tif (window.opener?.origin === window.location.origin)\r\n\t\t\t\t\twindow.opener.postMessage(CONSTANTS.CLOSING);\r\n\t\t\t\tnavigateBack();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Origins didn't match\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\tfunction navigateBack() {\r\n\t\tif (!window.opener) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// window.opener.focus(); // fails\r\n\t\t\twindow.history.back(); // works\r\n\t\t\t// window.close();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if mounted && !pending}\r\n\t<slot {syncKeys} />\r\n{/if}\r\n","<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n</script>\r\n\r\n<div>\r\n\t<div class=\"attention\">\r\n\t\t<div>\r\n\t\t\t⚠️ Authorize {props.method} from your wallet?\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<button class=\"yellow\" on:click={handleDenied}>No</button>\r\n\t\t\t<button class=\"green\" on:click={handleConfirmed}>Yes</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.5em;\r\n\t\tmargin: 0.5em;\r\n\t\twidth: fit-content;\r\n\t}\r\n\r\n\t.submit > button:not(:disabled) {\r\n\t\tbackground-color: #4caf50; /* Green */\r\n\t}\r\n\r\n\t.submit > button:disabled {\r\n\t\tbackground-color: rgb(126, 126, 126) !important; /* Grey */\r\n\t}\r\n\r\n\t.submit > button {\r\n\t\tborder: none;\r\n\t\tcolor: white;\r\n\t\tpadding: 15px 32px;\r\n\t\ttext-align: center;\r\n\t\ttext-decoration: none;\r\n\t\tdisplay: inline-block;\r\n\t\tfont-size: 16px;\r\n\t\tmargin-left: auto;\r\n\t\tborder-radius: 2px;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1));\r\n\t}\r\n\r\n\tbutton {\r\n\t\tborder: none;\r\n\t\tcolor: white;\r\n\t\tpadding: 15px 32px;\r\n\t\ttext-align: center;\r\n\t\ttext-decoration: none;\r\n\t\tdisplay: inline-block;\r\n\t\tfont-size: 16px;\r\n\t\twidth: fit-content;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-top: 0.5em;\r\n\t\tmargin-bottom: 1em;\r\n\t\tborder-radius: 2px;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1));\r\n\t}\r\n\r\n\tbutton.yellow {\r\n\t\tbackground-color: rgba(230, 226, 10, 0.82) !important;\r\n\t}\r\n\r\n\tbutton.ready {\r\n\t\tbackground-color: rgb(47, 137, 255, 0.82);\r\n\t}\r\n\r\n\tbutton.green {\r\n\t\tbackground-color: #4caf50;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\r\n\texport let props;\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<DefaultConfirmation bind:this={defConf} {props} let:props={p} on:confirmed>\r\n\t<div class=\"attention\">\r\n\t\t<!-- this is default content, override with slot -->\r\n\t\t<div>\r\n\t\t\t⚠️ Allow {p.params.origin} to see your <b>Public</b> Key?\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<button on:click|preventDefault={defConf.handleConfirm}>Yes</button>\r\n\t\t</div>\r\n\t</div>\r\n</DefaultConfirmation>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n\tconsole.log({ props });\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>\r\n\t\t<!-- JSON.stringify(, null, 2)   decoder.decode()-->\r\n\t\t<!-- {props.params.toString()}  -->\r\n\t\t<!-- TODO: Data layouts for confirmer  -->\r\n\t\t⚠️ Sign this transaction?\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<button class=\"yellow\" on:click|preventDefault={handleDenied}>No</button>\r\n\t\t<button class=\"green\" on:click|preventDefault={handleConfirmed}>Yes</button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>\r\n\t\t⚠️ Decrypt {decoder.decode(props.params.tag)}?\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<button class=\"yellow\" on:click|preventDefault={handleDenied}>No</button>\r\n\t\t<button class=\"green\" on:click|preventDefault={handleConfirmed}>Yes</button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","import { handlers } from '@peerpiper/iframe-wallet-engine';\r\nimport DefaultConfirmation from './DefaultConfirmation.svelte';\r\nimport Connect from './Connect.svelte';\r\n// import ArweaveSign from '../arweave/ConfirmSign.svelte';\r\nimport Sign from './Sign.svelte';\r\nimport Decrypt from './Decrypt.svelte';\r\n\r\nlet confirmationComponents = {\r\n\tDefault: { component: DefaultConfirmation }\r\n};\r\n\r\n// setup boring defaults, can be overriden with fanicer by users\r\nfor (const [key, value] of Object.entries(handlers)) {\r\n\tconfirmationComponents[key] = { component: DefaultConfirmation };\r\n}\r\n\r\n// Customize certain confirmation components\r\nlet customizedComponents = {\r\n\tconnect: { component: Connect },\r\n\ted25519: {\r\n\t\tsign: {\r\n\t\t\tcomponent: Sign\r\n\t\t}\r\n\t},\r\n\tarweaveWalletAPI: {\r\n\t\tsign: {\r\n\t\t\t// component: ArweaveSign\r\n\t\t}\r\n\t},\r\n\tproxcryptor: {\r\n\t\tselfDecrypt: {\r\n\t\t\tcomponent: Decrypt\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconfirmationComponents = { ...confirmationComponents, ...customizedComponents };\r\n\r\nexport { confirmationComponents };\r\n","<script>\r\n\timport { confirmationComponents } from '$lib/components/confirm/index';\r\n\timport { handlers } from '@peerpiper/iframe-wallet-engine';\r\n\r\n\texport let show;\r\n\texport let hide;\r\n\r\n\tconst leaf = (obj, path) => path.split('.').reduce((value, el) => value && value[el], obj);\r\n\r\n\tlet requests = [];\r\n\r\n\t// set confirm fn\r\n\t// calling confirm adds a confirmation request to the list of outstanding request\r\n\t// resolving the Promise removes the request\r\n\t// if last request, hide() the UI\r\n\tconst confirm = async (confirmSection, params) => {\r\n\t\tconst component = confirmSection\r\n\t\t\t? leaf(confirmationComponents, confirmSection) || confirmationComponents.Default\r\n\t\t\t: false;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst handleConfirmed = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(true); // signal handler to continue with action\r\n\t\t\t};\r\n\t\t\tconst handleDenied = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(false); // signal handler to continue with action\r\n\t\t\t};\r\n\r\n\t\t\tconst thisRequest = { component, confirmSection, params, handleConfirmed, handleDenied };\r\n\r\n\t\t\tfunction common() {\r\n\t\t\t\trequests = requests.filter((req) => req !== thisRequest); // find and remove element\r\n\t\t\t\tif (requests.length == 0) hide(); // hide if last one removed\r\n\t\t\t}\r\n\r\n\t\t\trequests = [...requests, thisRequest];\r\n\t\t\tshow(); // trigger the UI to show this request\r\n\t\t});\r\n\t};\r\n\r\n\t// pass the above confirm function to the handlers so they can use it when their methods are called\r\n\thandlers.setConfig('confirm', confirm);\r\n</script>\r\n\r\n{#if requests}\r\n\t{#each requests as { component, confirmSection, params, handleConfirmed, handleDenied }}\r\n\t\t<div class=\"active\">\r\n\t\t\t<svelte:component\r\n\t\t\t\tthis={component.component}\r\n\t\t\t\tprops={{ method: confirmSection, params }}\r\n\t\t\t\t{handleConfirmed}\r\n\t\t\t\t{handleDenied}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n\r\n<style>\r\n\t.active {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmin-width: 350px;\r\n\t\tmin-height: 50px;\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { onMount, setContext } from 'svelte';\r\n\timport Connector from '$lib/Connector.svelte';\r\n\timport GetKeys from '$lib/GetKeys.svelte';\r\n\timport { storedValue } from '$lib/stores';\r\n\timport AutoSizer from '$lib/AutoSizer.svelte';\r\n\timport Opened from '$lib/Opened.svelte';\r\n\timport Confirmer from '$lib/Confirmer.svelte';\r\n\r\n\timport Manager from '$lib/Manager.svelte';\r\n\r\n\tconst STORED_VALUE = 'STORED_VALUE';\r\n\tconst def = null;\r\n\r\n\t// browser functions (set in onMount to ensure browser loaded)\r\n\tlet ImmortalDB, save, mounted;\r\n\r\n\tlet syncing;\r\n\r\n\tonMount(async () => {\r\n\t\t({ ImmortalDB } = await import('immortal-db'));\r\n\t\tconst storedString = await ImmortalDB.get(STORED_VALUE, def);\r\n\t\t$storedValue = JSON.parse(storedString);\r\n\r\n\t\tsave = () => {\r\n\t\t\tImmortalDB.set(STORED_VALUE, JSON.stringify($storedValue)); // auto save when $storedValue changes\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tsyncing = window.opener && window.opener?.origin === window.location.origin;\r\n\t\t} catch (error) {\r\n\t\t\t// not syncing by same origin, that's ok it was probably a regular link from somewhere\r\n\t\t}\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\t$: if (ImmortalDB && $storedValue && save) save();\r\n\r\n\tfunction loadedKeys() {\r\n\t\tsave();\r\n\t}\r\n</script>\r\n\r\n<!-- Based on whether this is the Window.Top (not an iframe) or a Child (iframe) depends on which to show: -->\r\n{#if window == window.top}\r\n\t<!-- NOT an iframe  -->\r\n\t<div class=\"top-wrapper\">\r\n\t\t{#if mounted && syncing}\r\n\t\t\t<!-- Opened handles on:loadedKeys by ALSO syncing them with the opener window -->\r\n\t\t\t<Opened let:syncKeys>\r\n\t\t\t\t<Manager>\r\n\t\t\t\t\t{#if syncKeys}\r\n\t\t\t\t\t\t<GetKeys on:loadedKeys on:loadedKeys={syncKeys} />\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</Manager>\r\n\t\t\t</Opened>\r\n\t\t{:else}\r\n\t\t\t<!-- Manager handles on:loadedKeys ONLY by saving them to storage -->\r\n\t\t\t<Manager>\r\n\t\t\t\t<GetKeys on:loadedKeys />\r\n\t\t\t</Manager>\r\n\t\t{/if}\r\n\t</div>\r\n{:else}\r\n\t<!-- Auto-resize embedded iframe -->\r\n\t<AutoSizer let:walletReady let:show let:hide>\r\n\t\t<!-- walletReady gets passed from AutoSizer to GetKeys -->\r\n\t\t<Connector {mounted}>\r\n\t\t\t<Confirmer {show} {hide} />\r\n\t\t\t<Manager>\r\n\t\t\t\t{#if walletReady}\r\n\t\t\t\t\t<GetKeys on:loadedKeys={walletReady} />\r\n\t\t\t\t{/if}\r\n\t\t\t</Manager>\r\n\t\t</Connector>\r\n\t</AutoSizer>\r\n{/if}\r\n\r\n<!-- Note: Don't style outside of the AutoSizer, or else the sizes in the ifram will be all messed up -->\r\n<style>\r\n\t.top-wrapper {\r\n\t\tmargin: 1.618em;\r\n\t\tpadding: 1.618em;\r\n\t}\r\n</style>\r\n"],"names":["create_if_block","internals.generateMnemonic","internals.loadMnemonicInProxcryptor","getLoadedKeys","internals.getLoadedKeys"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIO,MAAM,cAAc,SAAU;;;;;;;;;;;QCuD9B,KAAY;AAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAQZ,IAAU,KAAG,sCAAsC;;;;;;;;;;;;;;;;;;;;;;;wBAH3C,IAAU;iDACb,IAAU,KAAG,WAAW,OAAO;AAAA;;AAHxC,uBAOM,QAAA,KAAA,MAAA;AANL,uBAKC,KAAA,MAAA;;;;AAFyB,cAAA,YAAA;AAAA,gBAAc,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;8CACrC,IAAU,KAAG,sCAAsC;AAAS,iBAAA,GAAA,OAAA;;0BAHpD,IAAU;AAAA;oEACb,IAAU,KAAG,WAAW,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAPrC,IAAO,MAAAA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;;AADb,uBAeM,QAAA,KAAA,MAAA;;;;;;AAjBqB,cAAA,YAAA;AAAA,gBAAa,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;UAGlC,IAAO,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArDD,YAAO;MAGd;MACA;MAGA;MACA;MAEA;AAEJ,UAAO,YAAA;AACN,aAAS,SAAS,MAAM,SAAS,MAAM,SAAS;oBAGhD,iBAAc,MAAA;AACb,mBAAA,GAAA,aAAa,IAAI;AACjB,qBAAe,OAAO,KAAK,OAAO,SAAS,MAAM,QAAQ;AAAA;AAG1D,iBAAA,GAAA,uBAAuB,UAAK;AACvB,UAAA,MAAM,QAAQ,UAAU,eAAa;AACxC,cAAM,MAAM,GAAG,YAAY,MAAM;;;AAI9B,UAAA,MAAM,KAAK,OAAO,UAAU,aAAW;AAC1C,gBAAQ,IAAI,gBAAgB;AAC5B,wBAAA,aAAA,eAAe,MAAM,KAAK,aAAW,YAAA;AAOrC,cAAM,MAAM,GAAG,YAAY,UAAU;AACrC,qBAAA,GAAA,aAAa,KAAK;AAClB,qBAAa,MAAK;AAClB,eAAO,MAAK;AAAA;AAIT,UAAA,MAAM,QAAQ,UAAU,SAAO;AAClC,qBAAA,GAAA,aAAa,KAAK;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACjDf,MAAM,UAAU,CAAC,KAAa,QAAQ,GAAG,MAAM,MAAM;AACvD,MAAA,IAAI,SAAS,QAAQ,MAAM;AAAU,WAAA;AACzC,SAAO,IAAI,MAAM,GAAG,KAAK,IAAI,QAAQ,IAAI,MAAM,IAAI,SAAS,KAAK,IAAI,MAAM;AAC5E;;;;;;;;;;;;;;;;;;eCiCW,mBAAiB;;;;;;;;;;;;;;;;;;kCAAjB,mBAAiB;;;;;;;;;;;;;;;;;;;AAV1B,uBAgBM,QAAA,KAAA,MAAA;AAfL,uBAcM,KAAA,GAAA;AALL,uBAAgC,KAAA,KAAA;;AAChC,uBAGE,KAAA,IAAA;;uCAZQ,IAAI,EAAA;;;;;;;;;;AAFA,sBAAA,qBAAA,KAAA,MAAA,EAAA,UAAU,GAAG,OAAO,SAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;eAFf,oBAAQ;AAAA;;;;gCAAR,oBAAQ;;;;AAArC,uBAA2C,QAAA,KAAA,MAAA;;;;;;;;;;;;;;qDAA1B,SAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;QADrB,KAAM;AAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJZ,uBAyBM,QAAA,MAAA,MAAA;AAxBL,uBAEM,MAAA,IAAA;;;;;;;;;wCAHoC,IAAI,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZ1C,IAAA,WAAW;;;AAJJ,MAAA,EAAA,QAAQ,SAAI;MAEnB;MACA;wBAGe;QACd,UAAU,UAAU,UAAU,UAAU,KAAK,SAAS;UACpD;AACN,iBAAA,GAAA,QAAQ,OAAO;AACf,iBAAA,GAAA,SAAS,IAAI;AACb,eAAkB,MAAA,aAAA,GAAA,SAAS,KAAK,GAAG,CAAC;AAAA;;;AAMH,aAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCNhC,IAAI,GAAC,OAAM,MAAA,EAAqC;;AAqBhD,MAAA,UAAA,OAAK,OAAM,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtBjB,uBAgDM,QAAA,KAAA,MAAA;;;;;;;;;;oBA/CA,KAAI,GAAC,OAAM,MAAA,EAAqC;;;;;;;;;;;;;;;;;;;;AAqBhD,UAAA,QAAA;AAAA,kBAAA,QAAK,OAAM,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdL,MAAA,eAAA,OAAK,OAAM,MAAA;;mCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;gBAJD,SAAO;;;;;;;;;;;;;;;;kCAAP,SAAO;;;;;;;;;;;;;;;;;;;;;;;AAFf,uBAkBM,QAAA,MAAA,MAAA;AAjBL,uBAEM,MAAA,IAAA;AADL,uBAAoB,MAAA,IAAA;;;AAErB,uBAaM,MAAA,IAAA;AAZL,uBAWK,MAAA,EAAA;;;;;;;;AAVG,uBAAA,QAAK,OAAM,MAAA;;qCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;;;8BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;uCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;AAOH,MAAA,WAAA,QAAQ,IAAO,GAAA,aAAa,GAAG,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AALxB,WAAA,IAAA,SAAA,iBAAA,KAAa,MAAA,IAAe,MAAA,OAAO,MACxC,SACA,MAAE,wDAAA;AAAA;;AAHN,uBAOK,QAAA,IAAA,MAAA;;;;;;;;AADH,UAAA,EAAA,WAAA,QAAA,MAAA,aAAA,YAAA,QAAQ,KAAO,GAAA,aAAa,GAAG,IAAA;AAAA,iBAAA,IAAA,QAAA;AALxB,UAAA,CAAA,WAAA,QAAA,KAAA,mBAAA,kBAAA,MAAa,MAAA,KAAe,MAAA,QAAO,MACxC,SACA,MAAE,2DAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,MAAA,aAAA,OAAK,OAAM,MAAA;;iCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;gBAJD,SAAO;;;;;;;;;;;;;;;;kCAAP,SAAO;;;;;;;;;;;;;;;;;;;;;;;AAFf,uBAuBM,QAAA,MAAA,MAAA;AAtBL,uBAEM,MAAA,IAAA;AADL,uBAAoB,MAAA,IAAA;;;AAErB,uBAkBM,MAAA,IAAA;AAjBL,uBAgBK,MAAA,EAAA;;;;;;;;AAfG,qBAAA,QAAK,OAAM,MAAA;;mCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;;;4BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;qCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;gBAIS,IAAK,GAAC,aAAa,IAAC;;;;;;;;;;;;;8CAApB,KAAK,GAAC,aAAa,IAAC;AAAA,iBAAA,GAAA,OAAA;AAAA;;;;;;;;AAGpB,MAAA,UAAA,OAAM,kBAAe;;;;;;;;;;;;;AAArB,UAAA,QAAA,KAAA,YAAA,WAAA,QAAM,kBAAe;AAAA,iBAAA,GAAA,OAAA;AAAA;;;;;;;;AAGrB,MAAA,UAAA,OAAM,YAAS;;;;;;;;;;;;;AAAf,UAAA,QAAA,KAAA,YAAA,WAAA,QAAM,YAAS;AAAA,iBAAA,GAAA,OAAA;AAAA;;;;;;;;;iBAR3B,QAAQ,IAAK,GAAC,IAAI,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADpB,uBAWK,QAAA,IAAA,MAAA;;;AATJ,uBAEM,IAAA,IAAA;;;AACN,uBAEM,IAAA,IAAA;;;AACN,uBAEM,IAAA,IAAA;;;;;;8DATL,QAAQ,KAAK,GAAC,IAAI,IAAA;AAAA,iBAAA,IAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhCtB,MAAA,WAAA,IAAQ,MAAA,IAAK,GAAA,SAAS,KAACA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;AAAvB,UAAA,KAAQ,MAAA,KAAK,GAAA,SAAS,GAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBR,MAAA,OAAA,OAAM,EAAE,aAAa,OAAO;AArB5B,MAAA,SAAA,OAAM,EAAE,aAAa,OAAO;AAOtB,MAAA,SAAA,OAAM,EAAE,aAAa,OAAO;AAqB5B,MAAA,SAAA,OAAM,EAAE,aAAa,OAAO;;QApC1C,SAAI;MAEX;MACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCgD0B,oEAE7B;;gBAAyD,qBAAmB;;;;;;;;iCAF/C,oEAE7B;;;oCAAyD,qBAAmB;;;;;;;;4BAA7D,OAAO;;;;;AAFvB,uBAIM,QAAA,KAAA,MAAA;;AAFL,uBAAqF,KAAA,MAAA;;;iBAC9E,IAAQ,IAAA,GAAA;;;AADmB,cAAA,YAAA;AAAA,gBAAqB,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;mBAChD,IAAQ,EAAA;AAAA;;;;;;;;;;;;;;;;;;;AALZ,QAAA,KAAiB,OAAA,UAAa,YAAiB;AAAI,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvCjD,QAAA,WAAW;MAEb;AAGA,MAAA,WAAW;MACX;AAEJ,UAAO,YAAA;oBACN,wBAAqB,YAAA;AACpB,mBAAA,GAAA,WAAW,sBAAsB;YAE3B,WAAQ,MAASC;mCAIvB,eAAY,iCAAQ,eAAR,EAAsB,SAAQ,IAAA,YAAA;AAE1C,mBAAA,GAAA,YAAY,wBAAwB;AACpC,mBAAA,GAAA,oBAAoB,UAAQ;AAC5B,mBAAA,GAAA,YAAY,gDAAgD;AAAA;;4BAMvC;AAEhB,UAAAC,0BAAoC,aAAa,QAAQ;AAE/D,aAAS,cAAc,SAAS;AAChC,iBAAA,GAAA,OAAOC,gBAAa,CAAA;AAAA;6BAGC;AACd,WAAAC,cAAuB;AAAA;;;;;;;UAXxB,gBAAgB,aAAa;AAAU,iBAAQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBCejD,IAAW,MAAAJ,kBAAA,GAAA;;;;;;;;;;;;;;;;;;kCAD4D,IAAK,KAAA,IAAA;;;;AAAlF,uBAIM,QAAA,KAAA,MAAA;;;;;;;UAHA,KAAW,IAAA;;;;;;;;;;;;;;;;;;;;oCAD4D,KAAK,KAAA,IAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;MAnD7E;MACA;MAEA;MAGA;MACA;MAKA;MACA,mBAAgB;AAAA,IACnB,UAAW,OAAO,aAAA,GAAA,QAAQ,CAAC;AAAA;AAG5B,UAAO,YAAA;AACH,IAAA,GAAA,WAAU,wBAAmD,MAAA,OAAA,gCAAA,KAAA,SAAA,GAAA;AAAA,aAAA,EAAA;AAAA,IAAA,CAAA,GAAA,OAAA,qBAAA,MAAA;AAC1D,UAAA,iBAAiB;AACvB,iBAAA,GAAA,YAAkB,MAAA,WAAW,KAAK,gBAAgB,CAAA;oBAElD,cAAW,YAAA;AACV,gBAAU,YAAW;AAAA;;kBAOV;AAEZ,cAAU,KAAI;AAAA;kBAGF;AAEZ,cAAU,KAAI;AAAA;AAGN,qBAAU,QAAM;AAExB,cAAU,sBAAsB,MAAM;AAAA;AAG9B,oBAAS,QAAK;AAEtB,cAAU,qBAAqB,MAAK;AAAA;;;;;;;;;;;;;AApBlC,mBAAa,gBAAgB,UAAU,YAAY;AAAA;;AACnD,mBAAa,eAAe,SAAS,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6C/C,MAAA,WAAA,WAAY,IAAO,MAAAA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;AAAnB,UAAA,YAAY,KAAO,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAdF;AACf,MAAA,CAAA,OAAO,QAAM;;;;AAKjB,WAAO,QAAQ;WAEP;AACR,YAAQ,IAAI,CAAC;AAAA;;;;;;MA9DX;MAEA;AACA,MAAA,UAAU;AAEd,UAAO,MAAA;;;UAED,OAAO,SAAS,WAAW,cAAO,WAAP,mBAAe,SAAM;AACnD,sBAAc,UAAU,eAAgB,WAAK;AAE5C,kBAAQ,IAAI,mCAAmC;AAC/C,uBAAA,GAAA,UAAU,KAAK;AAAA;;aAGT;AACR,cAAQ,KAAK,sBAAsB;AAAA;2BAGb,KAAK,WAAY,OAAC;AAAA;;AAClC,YAAA,cAAc;AACpB,cAAQ,MAAM,YAAY;;YAErB,eAAO,WAAP,oBAAe,YAAW,OAAO,SAAS;AAC7C,iBAAO,OAAO,YAAY,KAAK,OAAO,SAAS,QAAM,CAAG,QAAQ,KAAK,CAAA;AAAA,eAC9D;AACR,gBAAQ,IAAI,sBAAsB;AAAA;;oBAKpC,WAAQ,MAAA;AACP;QAAgB,KAAK,UAAU;AAAA,QAAa,aAAa;AAAA,SAAiB,WAAK;AAC9E,gBAAQ,IAAI,cAAc,MAAM,IAAI;AACpC,qBAAA,GAAA,UAAU,IAAI;AACd;;;AAIF,WAAO,iBAAiB,gBAAc,MAAA;;;AAEpC,gBAAQ,IAAI,cAAO,WAAP,oBAAe,MAAM;AACjC,gBAAQ,IAAI,OAAO,SAAS,MAAM;AAC9B,YAAA,cAAO,WAAP,mBAAe,YAAW,OAAO,SAAS;AAC7C,iBAAO,OAAO,YAAY,UAAU,OAAO;AAC5C;eACQ;AACR,gBAAQ,IAAI,sBAAsB;AAAA;;AAIpC,iBAAA,GAAA,UAAU,IAAI;AAAA;;;;;;;;;;;;;;;;;;;AChDC,MAAA,WAAA,OAAM,SAAM;;;;;;;;;;;;;;;;;gBADtB,yBACS;;gBAAc,oBAC5B;;;;gBAEgD,IAAE;;;gBACA,KAAG;;;;;;;;;;kCALhD,yBACS;;kCAAc,oBAC5B;;;;;;;qCAEgD,IAAE;;;;;qCACA,KAAG;;;;;;;;;;;;;;;;AAPvD,uBAUM,QAAA,MAAA,MAAA;AATL,uBAQM,MAAA,IAAA;AAPL,uBAEM,MAAA,IAAA;;;;;AACN,uBAGM,MAAA,IAAA;AAFL,uBAA0D,MAAA,OAAA;;;AAC1D,uBAA6D,MAAA,OAAA;;;;;AAD5B,gBAAA,YAAA;AAAA,kBAAY,GAAA,MAAA,MAAA,SAAA;AAAA;;AACb,gBAAA,YAAA;AAAA,kBAAe,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;AAJjC,UAAA,QAAA,KAAA,aAAA,YAAA,OAAM,SAAM;AAAA,iBAAA,IAAA,QAAA;AAAA;;;;;;;;;;;;QARjB,UAAK;QACL,oBAAe;QACf,iBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;iBCOX,IAAC,GAAC,OAAO,SAAM;;;;;;;;;;;;;;;;gBADrB,qBACK;;gBAAiB,eAAa;;gBAAG,QAAM;gBAAI,OACrD;;;;gBAEyD,KAAG;;;;;;;;kCAJvD,qBACK;;kCAAiB,eAAa;;;+BAAG,QAAM;;kCAAI,OACrD;;;;;;;oCAEyD,KAAG;;;;;;;;;;;;AAN7D,uBAQM,QAAA,MAAA,MAAA;AANL,uBAEM,MAAA,IAAA;;;;AADkC,uBAAa,MAAA,CAAA;;;;AAErD,uBAEM,MAAA,IAAA;AADL,uBAAoE,MAAA,MAAA;;;;AAAnC,cAAA,YAAA,IAAQ,GAAA,aAAa;AAArB,mBAAQ,cAAa,MAAA,MAAA,SAAA;AAAA;;;;;;iDAH5C,IAAC,GAAC,OAAO,SAAM;AAAA,iBAAA,IAAA,QAAA;AAAA;;;;;;;;;;;;;;;;;kBAJgC,QAAC,GAAA,GAAA,EAAA;AAAA,kBAAD,QAAC,IAAA,KAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QALjD,UAAK;MAEZ;;;AAG2B,gBAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCYK,qCAE3C;;;;gBAE+D,IAAE;;;gBACA,KAAG;;;;;;;;kCALzB,qCAE3C;;;;;;;qCAE+D,IAAE;;;;;qCACA,KAAG;;;;;;;;;;;;;;AAVrE,uBAYM,QAAA,MAAA,MAAA;AAVL,uBAKM,MAAA,IAAA;;;AACN,uBAGM,MAAA,IAAA;AAFL,uBAAyE,MAAA,OAAA;;;AACzE,uBAA4E,MAAA,OAAA;;;;;AAD5B,gBAAA,YAAA;AAAA,kBAAY,GAAA,MAAA,MAAA,SAAA;AAAA;;AACb,gBAAA,YAAA;AAAA,kBAAe,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;QAtBpD,UAAK;QACL,oBAAe;QACf,iBAAY;MAEH,YAAW;AAG/B,UAAQ,IAAG,EAAG,MAAK,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACON,MAAA,WAAA,OAAQ,OAAO,IAAM,GAAA,OAAO,GAAG,IAAA;;;;;;;;;;;;;;;;gBADvC,uBACO;;gBAAkC,GAC9C;;;;gBAE+D,IAAE;;;gBACA,KAAG;;;;;;;;kCAL/D,uBACO;;kCAAkC,GAC9C;;;;;;;qCAE+D,IAAE;;;;;qCACA,KAAG;;;;;;;;;;;;;;AAPrE,uBASM,QAAA,MAAA,MAAA;AAPL,uBAEM,MAAA,IAAA;;;;;AACN,uBAGM,MAAA,IAAA;AAFL,uBAAyE,MAAA,OAAA;;;AACzE,uBAA4E,MAAA,OAAA;;;;;AAD5B,gBAAA,YAAA;AAAA,kBAAY,GAAA,MAAA,MAAA,SAAA;AAAA;;AACb,gBAAA,YAAA;AAAA,kBAAe,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;AAJlD,UAAA,QAAA,KAAA,aAAA,YAAA,OAAQ,OAAO,IAAM,GAAA,OAAO,GAAG,IAAA;AAAA,iBAAA,IAAA,QAAA;AAAA;;;;;;;;;;;;QAdjC,UAAK;QACL,oBAAe;QACf,iBAAY;AAEjB,QAAA,cAAc;;;;;;;;;;;;;;;;;;;;;ACArB,IAAI,yBAAyB;AAAA,EAC5B,SAAS,EAAE,WAAW,oBAAoB;AAC3C;AAGA,WAAW,CAAC,KAAK,UAAU,OAAO,QAAQ,QAAQ,GAAG;AAC7B,yBAAA,OAAO,EAAE,WAAW,oBAAoB;AAChE;AAGA,IAAI,uBAAuB;AAAA,EAC1B,SAAS,EAAE,WAAW,QAAQ;AAAA,EAC9B,SAAS;AAAA,IACR,MAAM;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,EACD;AAAA,EACA,kBAAkB;AAAA,IACjB,MAAM,CAEN;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ,aAAa;AAAA,MACZ,WAAW;AAAA,IACZ;AAAA,EACD;AACD;AAEA,yBAAyB,kCAAK,yBAA2B;;;;;;;;;;;;;;mBCWjD,IAAQ;;iCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAAC,KAAQ;;mCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;4BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;qCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;AAGG,MAAA,eAAA,OAAU;;;;;UACP,QAAQ,KAAc;AAAA,UAAE,QAAA,KAAM;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHzC,uBAOM,QAAA,KAAA,MAAA;;;;;;;;;;;UAJK,QAAQ,KAAc;AAAA,UAAE,QAAA,KAAM;AAAA;;;;;AADjC,UAAA,iBAAA,gBAAA,QAAU,YAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAJxB,IAAQ,MAAAA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;UAAR,KAAQ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA1CD,SAAI;QACJ,SAAI;QAET,OAAI,CAAI,KAAK,SAAS,KAAK,MAAM,GAAG,EAAE,OAAQ,CAAA,OAAO,OAAO,SAAS,MAAM,KAAK,GAAG;MAErF,WAAQ,CAAA;QAMN,UAAO,OAAU,gBAAgB,WAAM;AACtC,UAAA,YAAY,iBACf,KAAK,wBAAwB,cAAc,KAAK,uBAAuB,UACvE;eAEQ,QAAO,CAAE,SAAS,WAAM;YAC5B,kBAAe,MAAA;AACpB;AACA,gBAAQ,IAAI;AAAA;YAEP,eAAY,MAAA;AACjB;AACA,gBAAQ,KAAK;AAAA;YAGR,cAAW;AAAA,QAAK;AAAA,QAAW;AAAA,QAAgB;AAAA,QAAQ;AAAA,QAAiB;AAAA;wBAE3D;wBACd,WAAW,SAAS,OAAQ,SAAQ,QAAQ,WAAW,CAAA;AACnD,YAAA,SAAS,UAAU;AAAG,eAAI;AAAA;sBAG/B,WAAQ,CAAA,GAAO,UAAU,WAAW,CAAA;AACpC;;;AAKF,WAAS,UAAU,WAAW,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACI/B,QAAA,WAAW,KAAO;AAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;AADxB,uBAgBM,QAAA,KAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASsB,QAAA,YAAA;AAAA,UAAW,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAD/B,IAAW,MAAA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;UAAX,KAAW,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBwB,QAAA,YAAA;AAAA,UAAQ,GAAA,MAAA,MAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAD1C,IAAQ,MAAA,kBAAA,GAAA;;;;;;;;;;;;;;;;;;;UAAR,KAAQ,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAPb,UAAU,OAAO;AAAG,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjClB,MAAA,eAAe;AACf,MAAA,MAAM;;;;MAGR,YAAY,MAAM;MAElB;AAEJ,UAAO,YAAA;;AACH,iBAAA,GAAA,EAAA,WAAU,0GAA+B,UAAA;AACtC,UAAA,qBAAqB,WAAW,IAAI,cAAc,GAAG;AAC3D,oBAAA,aAAA,eAAe,KAAK,MAAM,YAAY,GAAA,YAAA;oBAEtC,OAAI,MAAA;AACH,iBAAW,IAAI,cAAc,KAAK,UAAU,YAAY,CAAA;AAAA;;AAIxD,mBAAA,GAAA,UAAU,OAAO,UAAU,cAAO,WAAP,mBAAe,YAAW,OAAO,SAAS,MAAM;AAAA,aACnE;;AAGT,iBAAA,GAAA,UAAU,IAAI;AAAA;;;;;;;;;UAGR,cAAc,gBAAgB;AAAM,aAAI;AAAA;;;;;;;;;;;;;;;;;;;"}